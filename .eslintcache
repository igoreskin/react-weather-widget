[{"C:\\Users\\OWNER\\Desktop\\progr_folders\\react-weather-widget\\src\\WeatherContainer.js":"1","C:\\Users\\OWNER\\Desktop\\progr_folders\\react-weather-widget\\src\\index.js":"2","C:\\Users\\OWNER\\Desktop\\progr_folders\\react-weather-widget\\src\\reportWebVitals.js":"3","C:\\Users\\OWNER\\Desktop\\progr_folders\\react-weather-widget\\src\\App.js":"4"},{"size":2697,"mtime":1606354008239,"results":"5","hashOfConfig":"6"},{"size":500,"mtime":1606254058726,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1606254058726,"results":"8","hashOfConfig":"6"},{"size":214,"mtime":1606340773335,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"odn6ob",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\OWNER\\Desktop\\progr_folders\\react-weather-widget\\src\\WeatherContainer.js",["19"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst WeatherContainer = () => {\r\n\r\n  const [weather, setWeather] = useState([]);\r\n  const [zip, setZip] = useState('10036');\r\n  const [error, setError] = useState(false);\r\n  const [animate, setAnimate] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchWeather();\r\n    inputRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setWeather(weather);\r\n    inputRef.current.focus();\r\n  }, [weather])\r\n\r\n  useEffect(() => {\r\n    setAnimate(true);\r\n  }, [animate])\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const baseURL = `https://api.openweathermap.org/data/2.5/weather?zip=${zip},us&appid=709847967f5e54b97308c1b2cae4dee5`;\r\n\r\n  const fetchWeather = async () => {\r\n    try {\r\n      const res = await axios.get(baseURL);\r\n      setWeather(res.data);\r\n      setError(false);\r\n    } catch (error) {\r\n      console.error(\"ERROR MESSAGE: \", error.message);\r\n      setError(true);\r\n      setZip('');\r\n      inputRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setZip(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setAnimate(false); \r\n    fetchWeather();\r\n  }\r\n\r\n  const tempConversion = n => Math.round(n - 273.15);\r\n\r\n  const addClass = !error && animate && \"animate__animated animate__backInDown\";\r\n\r\n  return (\r\n    <div>\r\n      <div className={`header ${addClass}`}>{weather.name}\r\n        {\r\n          weather.weather && \r\n          <img \r\n            src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`} \r\n            alt=\"weather_icon\"\r\n          />\r\n        }\r\n      </div>\r\n\r\n      <div className=\"description\">{weather.weather && weather.weather[0].description}</div>\r\n\r\n      <div className=\"temp\">{weather.main && tempConversion(weather.main.temp)}\r\n        <span className=\"degree\">&deg;</span>\r\n      </div>\r\n\r\n      <div className=\"minmax\">\r\n        <span>{tempConversion(weather.main && weather.main.temp_min)}<span className=\"degree\">&deg;</span></span>\r\n        <span>{tempConversion(weather.main && weather.main.temp_max)}<span className=\"degree\">&deg;</span></span>\r\n      </div>\r\n      \r\n      <div className=\"line\" />\r\n\r\n      <div className=\"zip-header\">Zip Code:</div>\r\n\r\n        <form className=\"buttons\" onSubmit={handleSubmit}>\r\n          <input type=\"text\" ref={inputRef} className=\"zip-container\" value={zip || ''} onChange={handleChange} />\r\n          <button className=\"update\" type=\"submit\">Update</button>\r\n        </form>\r\n\r\n        {error && <div className=\"error animate__animated animate__flash\">Please enter a valid zip code!</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherContainer;\r\n","C:\\Users\\OWNER\\Desktop\\progr_folders\\react-weather-widget\\src\\index.js",[],"C:\\Users\\OWNER\\Desktop\\progr_folders\\react-weather-widget\\src\\reportWebVitals.js",[],"C:\\Users\\OWNER\\Desktop\\progr_folders\\react-weather-widget\\src\\App.js",[],{"ruleId":"20","severity":1,"message":"21","line":14,"column":6,"nodeType":"22","endLine":14,"endColumn":8,"suggestions":"23"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchWeather'. Either include it or remove the dependency array.","ArrayExpression",["24"],{"desc":"25","fix":"26"},"Update the dependencies array to be: [fetchWeather]",{"range":"27","text":"28"},[393,395],"[fetchWeather]"]
{"version":3,"sources":["WeatherContainer.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherContainer","useState","weather","setWeather","zip","setZip","error","setError","animate","setAnimate","useEffect","fetchWeather","inputRef","current","focus","useRef","baseURL","a","axios","get","res","data","console","message","tempConversion","n","Math","round","addClass","className","name","src","icon","alt","description","main","temp","temp_min","temp_max","onSubmit","e","preventDefault","type","ref","value","onChange","target","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAgGeA,EA7FU,WAAO,IAAD,EAECC,mBAAS,IAFV,mBAEtBC,EAFsB,KAEbC,EAFa,OAGPF,mBAAS,SAHF,mBAGtBG,EAHsB,KAGjBC,EAHiB,OAIHJ,oBAAS,GAJN,mBAItBK,EAJsB,KAIfC,EAJe,OAKCN,oBAAS,GALV,mBAKtBO,EALsB,KAKbC,EALa,KAO7BC,qBAAU,WACRC,IACAC,EAASC,QAAQC,UAChB,IAEHJ,qBAAU,WACRP,EAAWD,GACXU,EAASC,QAAQC,UAChB,CAACZ,IAEJQ,qBAAU,WACRD,GAAW,KACV,CAACD,IAEJ,IAAMI,EAAWG,iBAAO,MAElBC,EAAO,8DAA0DZ,EAA1D,8CAEPO,EAAY,uCAAG,4BAAAM,EAAA,+EAECC,IAAMC,IAAIH,GAFX,OAEXI,EAFW,OAGjBjB,EAAWiB,EAAIC,MACfd,GAAS,GAJQ,gDAMjBe,QAAQhB,MAAM,kBAAmB,KAAMiB,SACvChB,GAAS,GACTF,EAAO,IACPO,EAASC,QAAQC,QATA,yDAAH,qDA2BZU,EAAiB,SAAAC,GAAC,OAAIC,KAAKC,MAAMF,EAAI,SAErCG,GAAYtB,GAASE,GAAW,wCAEtC,OACE,gCACE,sBAAKqB,UAAS,iBAAYD,GAA1B,UAAuC1B,EAAQ4B,KAE3C5B,EAAQA,SACR,qBACE6B,IAAG,2CAAsC7B,EAAQA,QAAQ,GAAG8B,KAAzD,QACHC,IAAI,oBAKV,qBAAKJ,UAAU,cAAf,SAA8B3B,EAAQA,SAAWA,EAAQA,QAAQ,GAAGgC,cAEpE,sBAAKL,UAAU,OAAf,UAAuB3B,EAAQiC,MAAQX,EAAetB,EAAQiC,KAAKC,MACjE,sBAAMP,UAAU,SAAhB,qBAGF,sBAAKA,UAAU,SAAf,UACE,iCAAOL,EAAetB,EAAQiC,MAAQjC,EAAQiC,KAAKE,UAAU,sBAAMR,UAAU,SAAhB,qBAC7D,iCAAOL,EAAetB,EAAQiC,MAAQjC,EAAQiC,KAAKG,UAAU,sBAAMT,UAAU,SAAhB,wBAG/D,qBAAKA,UAAU,SAEf,qBAAKA,UAAU,aAAf,uBAEE,uBAAMA,UAAU,UAAUU,SAzCX,SAAAC,GACnBA,EAAEC,iBACFhC,GAAW,GACXE,KAsCI,UACE,uBAAO+B,KAAK,OAAOC,IAAK/B,EAAUiB,UAAU,gBAAgBe,MAAOxC,GAAO,GAAIyC,SA9CjE,SAAAL,GACnBnC,EAAOmC,EAAEM,OAAOF,QA6C4FG,QApC7F,WACf1C,EAAO,OAoCD,wBAAQwB,UAAU,SAASa,KAAK,SAAhC,uBAGDpC,GAAS,qBAAKuB,UAAU,yCAAf,gD,MC/EHmB,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.54ffe101.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst WeatherContainer = () => {\r\n\r\n  const [weather, setWeather] = useState([]);\r\n  const [zip, setZip] = useState('10036');\r\n  const [error, setError] = useState(false);\r\n  const [animate, setAnimate] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchWeather();\r\n    inputRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setWeather(weather);\r\n    inputRef.current.focus();\r\n  }, [weather])\r\n\r\n  useEffect(() => {\r\n    setAnimate(true);\r\n  }, [animate])\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const baseURL = `https://api.openweathermap.org/data/2.5/weather?zip=${zip},us&appid=709847967f5e54b97308c1b2cae4dee5`;\r\n\r\n  const fetchWeather = async () => {\r\n    try {\r\n      const res = await axios.get(baseURL);\r\n      setWeather(res.data);\r\n      setError(false);\r\n    } catch (error) {\r\n      console.error(\"ERROR MESSAGE: \", error.message);\r\n      setError(true);\r\n      setZip('');\r\n      inputRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setZip(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setAnimate(false); \r\n    fetchWeather();\r\n  }\r\n\r\n  const clearZip = () => {\r\n    setZip('');\r\n  }\r\n\r\n  const tempConversion = n => Math.round(n - 273.15);\r\n\r\n  const addClass = !error && animate && \"animate__animated animate__backInDown\";\r\n\r\n  return (\r\n    <div>\r\n      <div className={`header ${addClass}`}>{weather.name}\r\n        {\r\n          weather.weather && \r\n          <img \r\n            src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}.png`} \r\n            alt=\"weather_icon\"\r\n          />\r\n        }\r\n      </div>\r\n\r\n      <div className=\"description\">{weather.weather && weather.weather[0].description}</div>\r\n\r\n      <div className=\"temp\">{weather.main && tempConversion(weather.main.temp)}\r\n        <span className=\"degree\">&deg;</span>\r\n      </div>\r\n\r\n      <div className=\"minmax\">\r\n        <span>{tempConversion(weather.main && weather.main.temp_min)}<span className=\"degree\">&deg;</span></span>\r\n        <span>{tempConversion(weather.main && weather.main.temp_max)}<span className=\"degree\">&deg;</span></span>\r\n      </div>\r\n      \r\n      <div className=\"line\" />\r\n\r\n      <div className=\"zip-header\">Zip Code:</div>\r\n\r\n        <form className=\"buttons\" onSubmit={handleSubmit}>\r\n          <input type=\"text\" ref={inputRef} className=\"zip-container\" value={zip || ''} onChange={handleChange} onClick={clearZip} />\r\n          <button className=\"update\" type=\"submit\">Update</button>\r\n        </form>\r\n\r\n        {error && <div className=\"error animate__animated animate__flash\">Please enter a valid zip code!</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherContainer;\r\n","import './App.css';\r\nimport WeatherContainer from './WeatherContainer';\r\nimport 'animate.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <WeatherContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}